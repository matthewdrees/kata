"""Project Euler problem 29. Distinct Powers.

Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

    2²=4, 2³=8, 2⁴=16, 2⁵=32
    3²=9, 3³=27, 3⁴=81, 3⁵=243
    4²=16, 4³=64, 4⁴=256, 4⁵=1024
    5²=25, 5³=125, 5⁴=625, 5⁵=3125

If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

    4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
"""


def distinct_powers(a_max, b_max):
    """Return number of distinct terms in sequence aᵇ from 2 to a_max and b_bax.

    >>> distinct_powers(2, 2)
    1
    >>> distinct_powers(5, 5)
    15
    """
    s = set()
    for a in range(2, a_max + 1):
        for b in range(2, b_max + 1):
            s.add(a ** b)
    return len(s)


if __name__ == "__main__":
    import doctest

    doctest.testmod()

    print(distinct_powers(100, 100))
